{"remainingRequest":"/Users/sabahathussain/Desktop/HoMakes/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/sabahathussain/Desktop/HoMakes/node_modules/firebase/database/core/operation/AckUserWrite.js","dependencies":[{"path":"/Users/sabahathussain/Desktop/HoMakes/node_modules/firebase/database/core/operation/AckUserWrite.js","mtime":1501189652000},{"path":"/Users/sabahathussain/Desktop/HoMakes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sabahathussain/Desktop/HoMakes/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/*! @license Firebase v4.2.0\nBuild: rev-d6b2db4\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.AckUserWrite = undefined;\n\nvar _assert = require('../../../utils/assert');\n\nvar _Path = require('../util/Path');\n\nvar _Operation = require('./Operation');\n\nvar AckUserWrite = function () {\n    /**\n     *\n     * @param {!Path} path\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\n     * @param {!boolean} revert\n     */\n    function AckUserWrite(\n    /**@inheritDoc */path,\n    /**@inheritDoc */affectedTree,\n    /**@inheritDoc */revert) {\n        this.path = path;\n        this.affectedTree = affectedTree;\n        this.revert = revert;\n        /** @inheritDoc */\n        this.type = _Operation.OperationType.ACK_USER_WRITE;\n        /** @inheritDoc */\n        this.source = _Operation.OperationSource.User;\n    }\n    /**\n     * @inheritDoc\n     */\n    AckUserWrite.prototype.operationForChild = function (childName) {\n        if (!this.path.isEmpty()) {\n            (0, _assert.assert)(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n        } else if (this.affectedTree.value != null) {\n            (0, _assert.assert)(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\n            // All child locations are affected as well; just return same operation.\n            return this;\n        } else {\n            var childTree = this.affectedTree.subtree(new _Path.Path(childName));\n            return new AckUserWrite(_Path.Path.Empty, childTree, this.revert);\n        }\n    };\n    return AckUserWrite;\n}(); /**\n     * Copyright 2017 Google Inc.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\nexports.AckUserWrite = AckUserWrite;\n//# sourceMappingURL=AckUserWrite.js.map\n",null]}